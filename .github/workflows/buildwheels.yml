
on: [push, pull_request]

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12"]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for versioneer
          fetch-tags: true # Required for versioneer

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ifort dependencies (Windows)
        if: matrix.os == 'windows-latest'
        uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Build wheel with cibuildwheel
        env:
          CIBW_BUILD: "cp{311,312}-manylinux_x86_64"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BEFORE_BUILD: "pip install -r requirements-build.txt"  # if you have build dependencies
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"  # skip 32-bit and musl builds
        run: |
          cibuildwheel --output-dir dist

      - name: Upload Python Package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install twine
          python -m twine upload dist/*
